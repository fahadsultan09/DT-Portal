@model OrderReturnMaster

@if (Model.OrderReturnDetail.Count > 0)
{
    <div class="scrollmenu">
        <table id="example2" class="table table-bordered table-hover table-striped table-responsive" style="width:150%;">
            <thead>
                <tr>
                    <th>
                        <div class="icheck-success d-inline">
                            <input type="checkbox" name="select_all" id="example-select-all" value="true" />
                            <label for="example-select-all"></label>
                        </div>
                    </th>
                    <th>Product Code</th>
                    <th>Product Name</th>
                    <th>Company</th>
                    <th>Location</th>
                    <th>Batch No</th>
                    <th>MRP</th>
                    <th>Total Price</th>
                    <th>Quantity</th>
                    <th>Received Qty</th>
                    <th>Discount</th>
                    <th>Net Amount</th>
                    <th>Mfg. Date</th>
                    <th>Expiry Date</th>
                    <th>Invoice No</th>
                    <th>Invoice Date</th>
                    <th>Intimation Date</th>
                    <th>Remarks</th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < Model.OrderReturnDetail.Count(); i++)
                {
                    <tr>
                        <td>@Model.OrderReturnDetail[i].ProductMaster.SAPProductCode</td>
                        <td>
                            <div class="icheck-success d-inline">
                                <input type="checkbox" id="checkbox@(Model.OrderReturnDetail[i].Id)" asp-for="@Model.OrderReturnDetail[i].IsProductSelected" value="@EncryptDecrypt.Encrypt(Model.OrderReturnDetail[i].ProductId.ToString())" checked="@(Model.OrderReturnDetail[i].IsProductSelected == true ? "checked" : null)" />
                                <label for="checkbox@(Model.OrderReturnDetail[i].Id)">
                                </label>
                            </div>
                        </td>
                        <td>
                            <input type="hidden" asp-for="@Model.OrderReturnDetail[i].ProductId" />
                            @Model.OrderReturnDetail[i].ProductMaster.ProductDescription
                        </td>
                        <td>@Model.OrderReturnDetail[i].Company.CompanyName</td>
                        <td>@Model.OrderReturnDetail[i].PlantLocation.PlantLocationName</td>
                        <td>
                            <input type="text" asp-for="@Model.OrderReturnDetail[i].BatchNo" value="@Model.OrderReturnDetail[i].BatchNo" class="form-control" maxlength="10" oninput="validity.valid||(value='');" />
                        </td>
                        <td>
                            <input type="text" asp-for="@Model.OrderReturnDetail[i].MRP" value="@Model.OrderReturnDetail[i].MRP" min="0" max="999999" maxlength="6" pattern="\d*" oninput="validity.valid||(value='');" class="form-control" />
                        </td>
                        <td>@Model.OrderReturnDetail[i].TotalPrice.ToString("#,##0.00")</td>
                        <td>@Model.OrderReturnDetail[i].Quantity</td>
                        <td>
                            <input type="text" asp-for="@Model.OrderReturnDetail[i].ReceivedQty" value="@Model.OrderReturnDetail[i].Quantity" min="0" max="999999" maxlength="6" pattern="\d*" oninput="validity.valid||(value='');" class="form-control" />
                        </td>
                        <td>@Model.OrderReturnDetail[i].ProductMaster.Discount %</td>
                        <td><span class="Amount">@Model.OrderReturnDetail[i].NetAmount</span></td>
                        <td>@Model.OrderReturnDetail[i].ManufactureDate.ToString("dd/MM/yyyy")</td>
                        <td>@Model.OrderReturnDetail[i].ExpiryDate.ToString("dd/MM/yyyy")</td>
                        <td>@Model.OrderReturnDetail[i].InvoiceNo</td>
                        <td>@Model.OrderReturnDetail[i].InvoiceDate.ToString("dd/MM/yyyy")</td>
                        <td>@Model.OrderReturnDetail[i].IntimationDate.ToString("dd/MM/yyyy")</td>
                        <td>@Model.OrderReturnDetail[i].Remarks</td>
                    </tr>
                }
            </tbody>
            <tfoot>
                <tr>
                    <td colspan="@(SessionHelper.LoginUser.IsDistributor ? "11" : "11")"><span class="float-right">Grand Total</span></td>
                    <td colspan="@(SessionHelper.LoginUser.IsDistributor ? "8" : "7")"><strong><span class="TotalNetValue"></span></strong></td>
                </tr>
            </tfoot>
        </table>
    </div>
}
<script type="text/javascript">

    var table;

    $(document).ready(function () {

        $('.select2').select2();

        table = $("#example2").DataTable({
            "lengthMenu": [[10, 25, 50, -1], [10, 25, 50, "All"]],
            "responsive": true,
            "autoWidth": false,
            "order": [],
        });

        CalculateTotal();

        $("input[type='checkbox']").change(function (e) {

            if ($(this).attr('Id') != "example-select-all") {
                $.post(window.location.origin + "/OrderReturn/SelectProduct", { DPID: $(this).val() }, function (response) {
                });
                if ($(this).is(':checked') == false) {
                    $(this).closest('td').closest('tr').find('.ApproveQuantity').prop('readonly', true);
                    $(this).closest('td').closest('tr').find('.ApproveQuantity').val(0);
                } else {
                    $(this).closest('td').closest('tr').find('.ApproveQuantity').prop('readonly', false);
                }
            }
        });
        $("#example-select-all").change(function (e) {

            $.post(window.location.origin + "/OrderReturn/SelectAllProduct", { IsSelected: $('#example-select-all').is(':checked') }, function (response) {
            });
            if ($(this).is(':checked') == false) {
                $(this).closest('td').closest('tr').find('.ApproveQuantity').prop('readonly', true);
                $(this).closest('td').closest('tr').find('.ApproveQuantity').val(0);
            } else {
                $(this).closest('td').closest('tr').find('.ApproveQuantity').prop('readonly', false);
            }
        });
        //// Handle click on "Select all" control
        $('#example-select-all').on('click', function () {

            // Check/uncheck all checkboxes in the table
            var rows = table.rows({ 'search': 'applied' }).nodes();
            $('input[type="checkbox"]', rows).prop('checked', this.checked);
        });

        //// Handle click on checkbox to set state of "Select all" control
        $('#example2 tbody').on('change', 'input[type="checkbox"]', function () {
            // If checkbox is not checked
            if (!this.checked) {
                var el = $('#example-select-all').get(0);
                // If "Select all" control is checked and has 'indeterminate' property
                if (el && el.checked && ('indeterminate' in el)) {
                    // Set visual state of "Select all" control
                    // as 'indeterminate'
                    el.indeterminate = true;
                }
            }
        });
    });

    function CalculateTotal() {
        var sum = 0;
        $(".Amount").each(function () {

            if ($(this).text() != "") {
                sum += parseFloat($(this).text());
            }
        });
        $('.TotalNetValue').text(parseFloat(sum).toLocaleString(window.document.documentElement.lang));
    }
</script>