
<link href="~/lib/summernote/summernote-bs4.css" rel="stylesheet" />

<!-- Navbar -->
<nav class="main-header navbar navbar-expand navbar-white navbar-light">
    <!-- Left navbar links -->
    <ul class="navbar-nav">
        <li class="nav-item">
            <a class="nav-link" data-widget="pushmenu" href="#" role="button"><i class="fas fa-bars"></i></a>
        </li>
    </ul>
    <input type="hidden" id="hdnDistributorDisclaimer" value="@SessionHelper.Disclaimer" />
    @if (SessionHelper.LoginUser.IsDistributor)
    {
        <span style="width:95%; cursor: pointer;" class="text-danger" id="disclaimer">
            <marquee direction="left" scrollamount="3">
                <span class="disclaimerModalNav"></span>
            </marquee>
        </span>
    }
    <ul class="navbar-nav ml-auto">
        <li class="nav-item dropdown">
            <a class="nav-link" data-toggle="dropdown" id="NotificationCount">
                <i class="far fa-bell"></i>
                <span class="badge badge-warning navbar-badge" id="NotificationCountValue">@(SessionHelper.NotificationCount > 0 ? SessionHelper.NotificationCount.ToString() : "")</span>
            </a>
            <div class="dropdown-menu dropdown-menu-lg dropdown-menu-right scrollmenu @(SessionHelper.Notification.Count().ToString() == "0" ? "d-none" : "")" id="AppendNotification" style="height: 600px;">
                @if (SessionHelper.Notification != null && SessionHelper.Notification.Count() > 0)
                {
                    @foreach (var item in SessionHelper.Notification)
                    {
                        <a href="@(item.URL)" class="dropdown-item" style="background-color:@(item.Status == "Verified" ||item.Status ==  "Approved" ||item.Status ==  "InProcess" || item.Status == "Received" || item.Status == "PartiallyApproved" ? "#28a745cc" : item.Status == "Rejected" || item.Status == "Reject" ? "#dc3545cc" : "#11aabbcc"); color: #fff;">
                            <div class="media">
                                <div class="media-body">
                                    <p class="dropdown-item-title">Request #: @item.RequestId</p>
                                    <p class="text-sm">@item.Message</p>
                                    <p><i class="far fa-clock mr-1"></i>@item.RelativeTime</p>
                                </div>
                            </div>
                        </a>
                        <hr class="p-0 m-0" />
                    }
                }
            </div>
        </li>
    </ul>
</nav>
<!-- /.navbar -->
<!-- Main Sidebar Container -->
<aside class="main-sidebar sidebar-light-blue elevation-4">
    <!-- Brand Logo -->

    <a class="brand-link pl-0">
        <img src="~/Images/favicon.png" alt="AdminLTE Logo" class="brand-image">
        <span class="brand-text">SAMI Pharmaceuticals (Pvt.) Ltd.<sup>®</sup></span>
    </a>

    <!-- Sidebar -->
    <div class="sidebar">
        <!-- Sidebar user panel (optional) -->
        <div class="user-panel d-flex">
            <div class="info">
                <h5>@SessionHelper.LoginUser.FirstName @SessionHelper.LoginUser.LastName</h5>
                <a href="#" class="d-block"><strong>@SessionHelper.LoginUser.Role.RoleName</strong></a>
            </div>
        </div>
        <nav class="mt-2">
            <ul class="nav nav-pills nav-sidebar flex-column" data-widget="treeview" role="menu" data-accordion="false">
                <!-- Add icons to the links using the .nav-icon class with font-awesome or any other icon font library -->
                @{
                    var modules = SessionHelper.NavigationMenu.Where(e => e.ApplicationPage.IsShowOnNavigation == true && e.ApplicationActionId != (int)ApplicationActions.IsAdmin).OrderBy(y => y.ApplicationPage.Sort);

                    foreach (var module in modules.DistinctBy(x => x.ApplicationPage.ApplicationModuleId))
                    {
                        var applicationPages = modules.Where(x => x.ApplicationPage.ApplicationModuleId == module.ApplicationPage.ApplicationModuleId).DistinctBy(x => x.ApplicationPageId).ToList();

                        if (applicationPages.Count() > 0)
                        {
                            <li class="nav-item has-treeview">
                                <a href="#" class="nav-link active">
                                    <i class="@module.ApplicationPage.ApplicationModule.ModuleIcon"></i>
                                    <p>@module.ApplicationPage.ApplicationModule.ModuleName<i class="right fas fa-angle-left"></i></p>
                                </a>
                                <ul class="nav nav-treeview">
                                    @foreach (var pages in applicationPages.DistinctBy(a => a.ApplicationPageId))
                                    {
                                        <li class="nav-item">
                                            <a href="@Url.Content(pages.ApplicationPage.PageURL)" class="nav-link">
                                                <i class="@pages.ApplicationPage.PageIcon"></i>
                                                <p>@pages.ApplicationPage.PageTitle</p>
                                            </a>
                                        </li>
                                    }
                                </ul>
                            </li>
                        }
                        else
                        {
                            <li class="nav-item has-treeview">
                                <a href="@Url.Content(applicationPages[0].ApplicationPage.PageURL)" class="nav-link">
                                    <span class="far fa-circle nav-icon"></span>@applicationPages[0].ApplicationPage.PageTitle
                                </a>
                            </li>
                        }
                    }
                }
                <li class="nav-item has-treeview">
                    <a href="@Url.Action("Logout","Login")" class="nav-link">
                        <i class="fas fa-arrow-circle-right nav-icon"></i>
                        <p>Log out</p>
                    </a>
                </li>
            </ul>
        </nav>
    </div>
</aside>

<div class="modal fade" id="modal-disclaimer" aria-modal="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header bg-danger">
                <h4 class="modal-title">DISCLAIMER</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body disclaimerModal">
            </div>
            <div class="modal-footer justify-content-between">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<script src="~/lib/summernote/summernote-bs4.js"></script>
<script>

    $(document).ready(function () {

        var disclaimerModal = $("#hdnDistributorDisclaimer").val();

        if (disclaimerModal != "") {
            $('.disclaimerModal').html(disclaimerModal);
            $('.disclaimerModalNav').html(disclaimerModal.replace(/<[\/]{0,1}(p)[^><]*>/ig, ""));
        }

        var count = '@(SessionHelper.NotificationCount > 0 ? SessionHelper.NotificationCount.ToString() : "0")';
        if (count == "0") {
            $('#NotificationCountValue').css('display', 'none');
        }
    });

    $('body').on('click', '#NotificationCount', function () {

        var url = '@Url.Action("UpdateCount", "Notification",new { ApplicationPageId = (SessionHelper.Notification.Count() > 0 ? SessionHelper.Notification.Select(x => x.ApplicationPageId).First() : 0) })';
        $.get(url, function (context) {
        }).done(function (context) {
        });
        $('#NotificationCountValue').css('display','none');
    });

</script>
