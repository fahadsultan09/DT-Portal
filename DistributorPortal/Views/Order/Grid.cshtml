@model List<ProductDetail>
@inject IUnitOfWork unitOfWork
@{
    MultiSelectList companyList = new CompanyBLL(unitOfWork).DropDownCompanyList(Model.Where(x => x.IsProductSelected == true).Select(x => x.CompanyId).ToArray(), false);
}

<form asp-controller="Order"
      asp-action="ApproveOrder"
      id="frmApproveOrder"
      data-ajax-success="OnSuccess"
      data-ajax-complete="Complete"
      data-ajax="true"
      data-ajax-method="POST">
    <div class="table-responsive-sm">
        <table id="example2" class="table table-bordered table-condensed table-hover table-striped table-sm">
            <thead>
                <tr>
                    <th colspan="2" class="@(SessionHelper.LoginUser.IsDistributor ? "d-none" : null)">
                        Company:
                        <select name="companyId" asp-items="@(new MultiSelectList(companyList, "Value", "Text", companyList.SelectedValues))" disabled="@(ViewBag.Status != OrderStatus.PendingApproval ? "disabled" : null)" class="select2" id="ddlCompany" multiple="multiple" data-placeholder="All Companies" style="width: 85%;">
                            <option disabled>--Select company--</option>
                        </select>
                    </th>
                </tr>
                <tr>
                    <th width="1%" class="@(SessionHelper.LoginUser.IsDistributor ? "d-none" : null)"></th>
                    <th>Code</th>
                    <th>Product Name</th>
                    <th>Pack Size</th>
                    <th>Quantity</th>
                    <th>Approved Qty</th>
                    <th>Pending Qty</th>
                    <th>Carton Size</th>
                    <th>Rate</th>
                    <th>Discount</th>
                    <th>Quantity in Cartons</th>
                    <th>Total</th>
                    <th>Supplies</th>
                    <th>Company</th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < Model.Count(); i++)
                {
                    <tr>
                        <td class="@(SessionHelper.LoginUser.IsDistributor ? "d-none" : null)">
                            <div class="icheck-success d-inline">
                                <input type="checkbox" id="checkbox@(Model[i].Id)" asp-for="@Model[i].IsProductSelected" value="@Model[i].ProductMasterId" checked="@(Model[i].IsProductSelected == true ? "checked" : null)" disabled="@(ViewBag.Status != OrderStatus.PendingApproval ? "disabled" : null)" />
                                <label for="checkbox@(Model[i].Id)">
                                </label>
                            </div>
                        </td>
                        <td>
                            <input type="hidden" asp-for="@Model[i].Id" />
                            <input type="hidden" asp-for="@Model[i].ProductMasterId" />
                            <input type="hidden" asp-for="@Model[i].OrderNumber" />
                            @Model[i].ProductMaster.SAPProductCode
                        </td>
                        <td>@Model[i].ProductMaster.ProductName @Model[i].ProductMaster.ProductDescription</td>
                        <td>@Model[i].ProductMaster.PackSize</td>
                        <td>@Model[i].ProductMaster.Quantity.ToString("#,##0")</td>
                        <td>
                            @if (ViewBag.View == true)
                            {
                                @Model[i].ProductMaster.ApprovedQuantity.ToString("#,##0")
                            }
                            else
                            {
                                <input type="number" asp-for="@Model[i].ProductMaster.ApprovedQuantity" value="@Model[i].ProductMaster.Quantity" class="form-control ApproveQuantity numeric" _ProductId="@Model[i].ProductMasterId" _OrderId="@Model[i].OrderNumber" />
                            }
                        </td>
                        <td>@Model[i].PendingQuantity</td>
                        <td><span id="CurtonSize">@Model[i].ProductMaster.CartonSize</span></td>
                        <td>@Model[i].ProductMaster.Rate</td>
                        <td>@Model[i].ProductMaster.Discount %</td>
                        <td><span id="CurtonQty">@(Model[i].ProductMaster.Quantity / Model[i].ProductMaster.CartonSize)</span></td>
                        <td>@(Model[i].ProductMaster.Quantity * Model[i].ProductMaster.Rate)</td>
                        <td>@Model[i].WTaxRate %</td>
                        <td>
                            @Model[i].Company.CompanyName
                            <input type="text" asp-for="@Model[i].Company.Id" value="@Model[i].Company.Id" class="form-control d-none" />
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</form>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.mask/1.13.4/jquery.mask.min.js"></script>
<script type="text/javascript">
    $(document).ready(function () {

        //Initialize Select2 Elements
        $('.select2').select2();

        $("#example2").DataTable({
            "lengthMenu": [[5, 10, 25, 50, -1], [5, 10, 25, 50, "All"]],
            "responsive": true,
            "autoWidth": false,
            "order": [],
            "scrollX": true,
            "sScrollXInner": "200%",
        });
        //$('.numeric').mask('000,000,000,000');

        $('.ApproveQuantity').bind('keyup mouseup',function (data) {
            debugger;
            var intmaxvalue = @Int32.MaxValue;
            var Quantity = data.currentTarget.value;
            var Product = data.currentTarget.getAttribute("_ProductId");
            var Order = data.currentTarget.getAttribute("_OrderId");
            if (Quantity > intmaxvalue) {
                Toast.fire({
                    icon: 'error',
                    title: "Quantity cannot be greater than " + intmaxvalue
                });
            }
            else {
                var size = parseInt($(this).parent('td').parent('tr').find('#CurtonSize').text());
                if (Quantity != "" && Quantity != undefined) {
                    $(this).parent('td').parent('tr').find('#CurtonQty')[0].innerText = (parseInt(Quantity) / size).toString();

                }
                else {
                    $(this).parent('td').parent('tr').find('#CurtonQty')[0].innerText = "";
                }
                if (Quantity == "" || Quantity == "0") {
                    $(this).parent('td').parent('tr').find(':checkbox')[0].checked = false;
                }
                else {
                    $(this).parent('td').parent('tr').find(':checkbox')[0].checked = true;
                }
                    $.ajax({
                    type: "GET",
                    url: '@Url.Action("ApprovedOrderValue", "Order")',
                    data: { 'Quantity': Quantity, 'Product': Product, 'Order': Order },
                    cache: false,
                    success: function (response) {
                        debugger;
                        $("#UpdateOrderValueId").html(response);
                    },
                    complete: function (response) {

                    }
                })
            }
        });

        $("input[type='checkbox']").change(function (e) {

            $.post(window.location.origin + "/Order/SelectProduct", { Id: $(this).val() }, function (response) {
            });
            if ($(this).is(':checked') == false) {
                $(this).closest('td').closest('tr').find('.ApproveQuantity').prop('readonly', true);
                $(this).closest('td').closest('tr').find('.ApproveQuantity').val(0);
            } else {
                $(this).closest('td').closest('tr').find('.ApproveQuantity').prop('readonly', false);
            }
        });

    });

</script>


