@model Complaint
@{ ViewBag.Title = "Approve Complaint "; }

<div class="content-wrapper">
    <section class="content-header" disabled>
        <div class="container-fluid">
            <div class="row">
                <div class="col-12">
                    <div class="card card-primary defaultColor">
                        <div class="card-header">
                            <h3 class="card-title">Distributor Information</h3>
                        </div>
                        <div class="card-body" style="padding: 10px 0px 0px 20px;">
                            <div class="row">
                                <div class="col-lg-1 col-md-1 col-sm-12 col-xs-12">
                                    <h6>Name:</h6>
                                </div>
                                <div class="col-lg-3 col-md-2 col-sm-12 col-xs-12">
                                    <span><strong>@Model.Distributor.DistributorName</strong></span>
                                </div>
                                <div class="col-lg-1 col-md-1 col-sm-12 col-xs-12">
                                    <h6>City:</h6>
                                </div>
                                <div class="col-lg-3 col-md-2 col-sm-12 col-xs-12">
                                    <span><strong>@Model.Distributor.City</strong></span>
                                </div>

                                <div class="col-lg-1 col-md-1 col-sm-12 col-xs-12">
                                    <h6>Code:</h6>
                                </div>
                                <div class="col-lg-3 col-md-2 col-sm-12 col-xs-12">
                                    <span><strong>@Model.Distributor.DistributorSAPCode</strong></span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-12">
                    <div class="card card-primary">
                        <div class="card-header">
                            <h3 class="card-title">Complaint</h3>
                            @if (Model.Id > 0)
                            {
                                @if (Model.Status == ComplaintStatus.Resolved)
                                {
                                    string description = EnumHelper<ComplaintStatus>.GetDisplayValue(ComplaintStatus.InProcess);
                                    <span class="badge badge-warning pull-right" style="margin-left:5px;">@Html.DisplayFor(e => description)</span>
                                }
                                else if (Model.Status == ComplaintStatus.Approved)
                                {
                                    <span class="badge badge-success float-left" style="margin-left:5px;">@Model.Status</span>
                                }
                                else if (Model.Status == ComplaintStatus.Pending)
                                {
                                    <span class="badge badge-danger float-left" style="margin-left:5px;">@Model.Status</span>
                                }
                                else
                                {
                                    <span class="badge badge-info float-left" style="margin-left:5px;">@Model.Status</span>
                                }
                            }
                            <span class="float-right"><strong>Complaint No: @Model.SNo</strong></span>
                        </div>
                        <div class="card-body">
                            <div class=" row">
                                <div class="col-lg-4 col-md-4 col-sm-12 col-xs-12">
                                    <h6>Complaint Category<span class="text-danger"> * </span></h6>
                                </div>
                                <div class="col-lg-4 col-md-4 col-sm-12 col-xs-12">
                                    <h6>Complaint Sub Category<span class="text-danger"> * </span></h6>
                                </div>
                                <div class="col-lg-4 col-md-4 col-sm-12 col-xs-12">
                                    <h6>Attachment</h6>
                                </div>
                                <div class="col-lg-4 col-md-4 col-sm-12 col-xs-12">
                                    @Html.DropDownListFor(e => e.ComplaintCategoryId, Model.ComplaintCategoryList, "--Please Select--", htmlAttributes: new { @class = "form-control", @id = "ddlComplaintCategory" })
                                    <span asp-validation-for="ComplaintCategoryId" class="text-danger"></span>
                                </div>
                                <div class="col-lg-4 col-md-4 col-sm-12 col-xs-12">
                                    @Html.DropDownListFor(e => e.ComplaintSubCategoryId, Model.ComplaintSubCategoryList, "--Please Select--", htmlAttributes: new { @class = "form-control", @id = "ddlComplaintSubCategory" })
                                    <span asp-validation-for="ComplaintSubCategoryId" class="text-danger"></span>
                                </div>
                                <div class="col-lg-4 col-md-4 col-sm-12 col-xs-12">
                                    <span class="caption">
                                        <a asp-action="GetFile" asp-controller="Home" asp-route-filepath="@(Model.File != null ? Model.File : "")" target="_blank">@(Model.File != null ? Model.File.Split('_')[1] : "")</a>
                                    </span>
                                </div>
                            </div>
                            <br />
                            <div class="row">
                                <div class="col-lg-6 col-md-6 col-sm-12 col-xs-12">
                                    <h6>Description<span class="text-danger"> * </span></h6>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-6 col-md-6 col-sm-12 col-xs-12">
                                    <textarea asp-for="Description" class="form-control"></textarea>
                                    <span asp-validation-for="Description" class="text-danger"></span>
                                </div>
                            </div>
                            <br />
                            <div class="row">
                                <div class="col-lg-6 col-md-6 col-sm-12 col-xs-12">
                                    @if (!string.IsNullOrEmpty(Model.ResolvedRemarks))
                                    {
                                        <h6>Resolver Remarks</h6>
                                    }
                                </div>
                                <div class="col-lg-6 col-md-6 col-sm-12 col-xs-12">
                                    @if (!string.IsNullOrEmpty(Model.Remarks))
                                    {
                                        <h6>Approver Remarks</h6>
                                    }
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-6 col-md-6 col-sm-12 col-xs-12">
                                    @if (!string.IsNullOrEmpty(Model.ResolvedRemarks))
                                    {
                                        <textarea asp-for="ResolvedRemarks" class="form-control"></textarea>
                                    }
                                </div>
                                <div class="col-lg-6 col-md-6 col-sm-12 col-xs-12">
                                    @if (!string.IsNullOrEmpty(Model.Remarks))
                                    {
                                        <textarea asp-for="Remarks" class="form-control"></textarea>
                                    }
                                </div>
                            </div>
                            <br />
                            <div class="row">
                                <div class="col-12 pull-right">
                                    @if ((Model.Status != ComplaintStatus.Approved && Model.Status != ComplaintStatus.Rejected) && SessionHelper.LoginUser.UserName != "000004")
                                    {
                                        <button type="button" name="btnSubmit" onclick="UpdateStatus(this, 'Complaint', 'UpdateStatus', @Model.Id);" value="@ComplaintStatus.Resolved" class="btn btn-success float-right @(SessionHelper.LoginUser.IsDistributor || Model.Status == ComplaintStatus.Resolved ? "d-none" : null)">
                                            Resolve
                                        </button>
                                    }
                                    @if (Model.Status == ComplaintStatus.Resolved && SessionHelper.LoginUser.UserName != "000013" && SessionHelper.LoginUser.UserName != "000014")
                                    {
                                        <button type="button" name="btnSubmit" onclick="Approve(this, 'Complaint', 'UpdateStatus', @Model.Id);" value="@ComplaintStatus.Approved" class="btn btn-success float-right @(SessionHelper.LoginUser.IsDistributor || Model.Status == ComplaintStatus.Approved ? "d-none" : null)">
                                            Approve
                                        </button>
                                        <button type="button" name="btnSubmit" onclick="Approve(this, 'Complaint', 'UpdateStatus', @Model.Id);" value="@ComplaintStatus.Rejected" class="btn btn-danger float-right  mr-1 @(SessionHelper.LoginUser.IsDistributor || Model.Status == ComplaintStatus.Rejected ? "d-none" : null)">
                                            Reject
                                        </button>
                                    }
                                    <a asp-controller="Complaint" asp-action="Index" class="btn btn-secondary float-right mr-3">
                                        Back
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>

<script>

    $(document).ready(function () {

        $(".container-fluid :input, input-group-append").not("[name=btnSubmit]").attr("disabled", true);

        $('.select2').select2({
            width: '100%',
        });
    });

     function Delete(e) {
        Swal.fire({
            title: "Are you sure you want to verify Complaint?",
            type: "warning",
            showCancelButton: true,
            confirmButtonColor: "#DD6B55",
            confirmButtonText: "Yes",
            closeOnConfirm: true,
            showLoaderOnConfirm: true
        }).then((result) => {
            if (result.value) {
                BlockUI();
                $.post('@Url.Action("VerifyComplaint", "Complaint")/' + e.id, null, function (data) {
                    if (data) {
                        Toast.fire({ icon: 'success', title: '@NotificationMessage.DeletedSuccessfully' });
                        setTimeout(function () {
                            window.location.reload();
                        }, 1000);
                    } else {
                        Toast.fire({ icon: 'error', title: '@NotificationMessage.ErrorOccurred' });
                    }
                });
                UnBlockUI();
            }
        });
    }

    //Approve
    function Approve(e, controllerName, actionName, id) {
        var val = '';
        if (e.value == undefined) {
            val = e;
        }
        else {
            val = e.value;
        }
            Swal.fire({
                type: "warning",
                confirmButtonText: "Yes",
                title: 'Enter Remarks',
                input: 'text',
                inputLabel: 'Remarks',
                inputValue: '',
                showCancelButton: true,
                inputValidator: (value) => {
                    if (!value) {
                        return 'You need to write something!'
                    }
                    if (value.length > 255) {
                        return 'You have exceeded 255 characters';
                    }
                }
            }).then(function (result) {

                if (result.value) {
                    BlockUI();
                    $.post(window.location.origin + "/" + controllerName + "/" + actionName, { Id: id, Status: val, Remarks: result.value }, function (data) {
                        if (data) {
                            if (e.value == "Resolved") {
                                Toast.fire({ icon: 'success', title: 'Resolved successfully.' });
                            } else if (e.value == "Reject") {
                                Toast.fire({ icon: 'success', title: 'Reject successfully.' });
                            }
                            setTimeout(function () {
                                window.location.reload();
                            }, 1000);
                        } else {
                            Toast.fire({ icon: 'error', title: 'Error occured while saving changes.' });
                        }
                    });
                    UnBlockUI();
                }
            });
        }

</script>
