@model DistributorDashboardViewModel
@{
    ViewData["Title"] = "Home";
    int MaxOrder = Model.PendingApproval + Model.PaymentVerified + Model.InProcess + Model.PartiallyProcessed + Model.CompletelyProcessed + Model.Reject + Model.ReturnOrder + Model.Draft;
}

<style type="text/css">
    body {
        min-height: 400px;
        margin-bottom: 50px;
        clear: both;
    }
</style>

<div class="content-wrapper">

    <div class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1 class="m-0 text-dark">Dashboard</h1>
                </div>
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item"><a href="#">Home</a></li>
                        <li class="breadcrumb-item active">Dashboard</li>
                    </ol>
                </div>
            </div>
        </div>
    </div>
    <section class="content">
        <div class="container-fluid">

            <div class="row">
                <div class="col-12 col-sm-6 col-md-3">
                    <div class="info-box">
                        <span class="info-box-icon bg-info elevation-1"><i class="fas fa-shopping-cart"></i></span>
                        <div class="info-box-content">
                            <span class="info-box-text">Total in Process Orders</span>
                            <span class="info-box-number">@Model.InProcessOrder</span>
                        </div>
                    </div>
                </div>
                <div class="col-12 col-sm-6 col-md-3">
                    <div class="info-box mb-3">
                        <span class="info-box-icon bg-warning elevation-1">
                            <i class="fas fa-money-bill-alt"></i>
                        </span>

                        <div class="info-box-content">
                            <span class="info-box-text">Unverfied Payments</span>
                            <span class="info-box-number">@Model.UnverifiedPaymentAll</span>
                        </div>
                    </div>
                </div>
                <div class="col-12 col-sm-6 col-md-3">
                    <div class="info-box mb-3">
                        <span class="info-box-icon bg-danger elevation-1"><i class="fas fa-undo-alt"></i></span>

                        <div class="info-box-content">
                            <span class="info-box-text">Return Orders</span>
                            <span class="info-box-number">@Model.ReturnOrder</span>
                        </div>
                    </div>
                </div>
                <div class="clearfix hidden-md-up"></div>

                <div class="col-12 col-sm-6 col-md-3">
                    <div class="info-box mb-3">
                        <span class="info-box-icon bg-success elevation-1"><i class="fas fa-clipboard-list"></i></span>

                        <div class="info-box-content">
                            <span class="info-box-text">Complaints</span>
                            <span class="info-box-number">@Model.Complaint</span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-12">
                    <div class="col-lg-12">
                        <div class="card  card-success">
                            <div class="card-header border-0">
                                <div class="d-flex justify-content-between">
                                    <h3 class="card-title">Order Payment Status - Last 12 Months</h3>
                                </div>
                            </div>
                            <div class="card-body">
                                <div class="position-relative mb-4">
                                    <canvas id="payments-chart" height="200"></canvas>
                                </div>
                                <div class="d-flex flex-row justify-content-end">
                                    <span class="mr-2"><i class="fas fa-square text-primary"></i> This year</span>
                                    <span><i class="fas fa-square text-gray"></i> Last year</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-12">
                    <!-- /.card-body -->
                    <!--</div>-->
                    <div class="col-lg-12">
                        <div class="card">
                            <div class="card-header">
                                <div class="d-flex justify-content-between">
                                    <h3 class="card-title">Order Status - Last 12 Months</h3>
                                    @*<a href="javascript:void(0);">View Report</a>*@
                                </div>
                            </div>
                            <div class="card-body">
                                <div class="position-relative mb-4">
                                    <canvas id="visitors-chart" height="200"></canvas>
                                </div>

                                <div class="d-flex flex-row justify-content-end">
                                    <span class="mr-2"><i class="fas fa-square text-primary"></i> This year</span>
                                    <span><i class="fas fa-square text-gray"></i> Last year</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-5">
                    <!-- jQuery Knob -->
                    <div class="card">
                        <div class="card-header">
                            <h3 class="card-title"><i class="far fa-chart-bar"></i>Payments - @DateTime.Now.Year</h3>
                            <button class="btn btn-outline-primary float-right">View All</button>
                        </div>
                        <!-- /.card-header -->
                        <div class="card-body">
                            <!-- /.row -->
                            <div class="row">
                                <div class="col-6 text-center">
                                    <input type="text" readonly="readonly" disabled="disabled" class="knob" value="@Model.VerifiedPayment" data-min="0" data-max="@(Model.VerifiedPayment + Model.UnverifiedPayment)" data-width="90" data-height="90" data-fgColor="#28a745">
                                    <div class="knob-label">Verified Payment</div>
                                </div>
                                <!-- ./col -->
                                <div class="col-6 text-center">
                                    <input type="text" readonly="readonly" disabled="disabled" class="knob" value="@Model.UnverifiedPayment" data-min="0" data-max="@(Model.VerifiedPayment + Model.UnverifiedPayment)" data-width="90" data-height="90" data-fgColor="#dc3545">

                                    <div class="knob-label">Unverified Payment</div>
                                </div>
                                <!-- ./col -->
                            </div>
                            <!-- /.row -->
                            <div class="row">
                                <!-- ./col -->
                                <div class="col-6 text-center">
                                    <input type="text" readonly="readonly" disabled="disabled" class="knob" value="@((int)SessionHelper.DistributorBalance.SAMI)" data-max="@((int)SessionHelper.DistributorBalance.SAMI + (int)SessionHelper.DistributorBalance.HealthTek)" data-width="90" data-height="90" data-fgColor="#39CCCC">

                                    <div class="knob-label">SAMI Balance</div>
                                </div>
                                <div class="col-6 text-center">
                                    <input type="text" readonly="readonly" disabled="disabled" class="knob" value="@((int)SessionHelper.DistributorBalance.HealthTek)" data-max="@((int)SessionHelper.DistributorBalance.SAMI + (int)SessionHelper.DistributorBalance.HealthTek)" data-width="90" data-height="90" data-fgColor="#39CCCC">

                                    <div class="knob-label">Healthtek Balance</div>
                                </div>
                                <!-- ./col -->
                            </div>
                            <!-- /.row -->
                        </div>
                        <!-- /.card-body -->
                    </div>
                    <!-- /.card -->
                </div>
                <div class="col-7">
                    <!-- jQuery Knob -->
                    <div class="card">
                        <div class="card-header">
                            <h3 class="card-title"><i class="far fa-chart-bar"></i>Orders - @DateTime.Now.Year</h3>
                            <button class="btn btn-outline-primary float-right">View All</button>
                        </div>
                        <!-- /.card-header -->
                        <div class="card-body">
                            <div class="row">
                                <!-- ./col -->
                                <div class="col-3 text-center">
                                    <input type="text" readonly="readonly" disabled="disabled" class="knob" value="@Model.PendingApproval" data-min="0" data-max="@MaxOrder" data-width="90" data-height="90" data-fgColor="#f56954">
                                    <div class="knob-label">Pending Approval</div>
                                </div>
                                <div class="col-3 text-center">
                                    <input type="text" readonly="readonly" disabled="disabled" class="knob" value="@Model.PaymentVerified" data-min="0" data-max="@MaxOrder" data-width="90" data-height="90" data-fgColor="#00c0ef">
                                    <div class="knob-label">Payment Verified</div>
                                </div>
                                <div class="col-3 text-center">
                                    <input type="text" readonly="readonly" disabled="disabled" class="knob" value="@Model.InProcess" data-min="0" data-max="@MaxOrder" data-width="90" data-height="90" data-fgColor="#39CCCC">
                                    <div class="knob-label">In Process</div>
                                </div>
                                <div class="col-3 text-center">
                                    <input type="text" readonly="readonly" disabled="disabled" class="knob" value="@Model.PartiallyProcessed" data-min="0" data-max="@MaxOrder" data-width="90" data-height="90" data-fgColor="#932ab6">
                                    <div class="knob-label">Partially Processed</div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-3 text-center">
                                    <input type="text" readonly="readonly" disabled="disabled" class="knob" value="@Model.CompletelyProcessed" data-min="0" data-max="@MaxOrder" data-width="90" data-height="90" data-fgColor="#00a65a">
                                    <div class="knob-label">Completely Processed</div>
                                </div>
                                <div class="col-3 text-center">
                                    <input type="text" readonly="readonly" disabled="disabled" class="knob" value="@Model.OnHold" data-min="0" data-max="@MaxOrder" data-width="90" data-height="90" data-fgColor="#932ab6">
                                    <div class="knob-label">On Hold</div>
                                </div>
                                <div class="col-3 text-center">
                                    <input type="text" readonly="readonly" disabled="disabled" class="knob" value="@Model.Reject" data-min="0" data-max="@MaxOrder" data-width="90" data-height="90" data-fgColor="#932ab6">
                                    <div class="knob-label">Reject</div>
                                </div>
                                <div class="col-3 text-center">
                                    <input type="text" readonly="readonly" disabled="disabled" class="knob" value="@Model.Draft" data-min="0" data-max="@MaxOrder" data-width="90" data-height="90" data-fgColor="#932ab6">
                                    <div class="knob-label">Draft</div>
                                </div>
                            </div>
                            <!-- /.row -->
                        </div>
                        <!-- /.card-body -->
                    </div>
                    <!-- /.card -->
                </div>
                <!-- /.col -->
            </div>
            <div class="row">
                <div class="col-12">
                    <div class="card card-success">
                        <div class="card-header">
                            <h3 class="card-title">Payment Status - Last 12 Months</h3>
                        </div>
                        <div class="card-body">
                            <div class="chart">
                                <canvas id="barChart" style="min-height: 250px; height: 250px; max-height: 250px; max-width: 100%;"></canvas>
                            </div>
                        </div>
                        <!-- /.card-body -->
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="card">
                        <div class="card-header border-transparent">
                            <h3 class="card-title">Recent Orders</h3>
                        </div>
                        <div class="card-body p-0">
                            <div class="table-responsive">
                                <table class="table m-0">
                                    <thead>
                                        <tr>
                                            <th>Order No</th>
                                            <th>Amount</th>
                                            <th>Status</th>
                                            <th>Action</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @{
                                            if (Model.RecentOrder != null && Model.RecentOrder.Count() > 0)
                                            {
                                                foreach (var item in Model.RecentOrder)
                                                {
                                                    <tr>
                                                        <td>@item.OrderNo</td>
                                                        <td>@item.Amount</td>
                                                        <td>@item.Status</td>
                                                        <td>
                                                            <a asp-controller="Order" asp-action="Index" asp-route-id="@item.OrderNo" class="btn btn-sm btn-default"><i class="fa fa-eye"></i></a>
                                                        </td>
                                                    </tr>
                                                }
                                            }
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                        <div class="card-footer clearfix">
                            <a asp-controller="Order" asp-action="Index" class="btn btn-sm btn-secondary float-right">View All Orders</a>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="card">
                        <div class="card-header border-transparent">
                            <h3 class="card-title">Recent Payments</h3>
                        </div>
                        <div class="card-body p-0">
                            <div class="table-responsive">
                                <table class="table m-0">
                                    <thead>
                                        <tr>
                                            <th>Payment Id</th>
                                            <th>Payment Mode</th>
                                            <th>Amount</th>
                                            <th>Status</th>
                                            <th>Action</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @{
                                            if (Model.RecentPayment != null && Model.RecentPayment.Count() > 0)
                                            {
                                                foreach (var item in Model.RecentPayment)
                                                {
                                                    <tr>
                                                        <td>@item.PaymentId</td>
                                                        <td>@item.PaymentMode</td>
                                                        <td>@item.Amount</td>
                                                        <td>
                                                            @if (item.Status == PaymentStatus.Verified)
                                                            {
                                                                <span class="badge badge-success">@item.Status</span>
                                                            }
                                                            else
                                                            {
                                                                <span class="badge badge-danger">@item.Status</span>
                                                            }
                                                        </td>
                                                        <td>
                                                            <a asp-controller="Payment" asp-action="Index" asp-route-id="@item.PaymentId" class="btn btn-sm btn-default"><i class="fa fa-eye"></i></a>
                                                        </td>
                                                    </tr>
                                                }
                                            }
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                        <div class="card-footer clearfix">
                            <a asp-controller="Payment" asp-action="Index" class="btn btn-sm btn-secondary float-right">View All Payments</a>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-6">
                    <!-- /.card -->
                    <div class="card">
                        <div class="card-header">
                            <h3 class="card-title">Products</h3><br />
                            <small>Top five purchasing products by quantity</small>
                        </div>
                        <div class="card-body table-responsive p-0">
                            <table class="table table-striped table-valign-middle">
                                <thead>
                                    <tr>
                                        <th>S.No.</th>
                                        <th>Product</th>
                                        <th>Current Price</th>
                                        <th>Quantity</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @{
                                        int i = 1;
                                        if (Model != null && Model.ProductViewModelQuantity.Count() > 0)
                                        {
                                            foreach (var item in Model.ProductViewModelQuantity.OrderByDescending(x => x.Quantity))
                                            {
                                                <tr>
                                                    <td>@(i++)</td>
                                                    <td>@item.ProductName</td>
                                                    <td>@item.CurrentPrice.</td>
                                                    <td>@item.Quantity</td>
                                                </tr>
                                            }
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                    <!-- /.card -->
                </div>
                <div class="col-lg-6">
                    <!-- /.card -->
                    <div class="card">
                        <div class="card-header">
                            <h3 class="card-title">Products</h3><br />
                            <small>Top five purchasing products by order</small>
                        </div>
                        <div class="card-body table-responsive p-0">
                            <table class="table table-striped table-valign-middle">
                                <thead>
                                    <tr>
                                        <th>S.No.</th>
                                        <th>Product</th>
                                        <th>Current Price</th>
                                        <th>Order</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @{
                                        int j = 1;
                                        if (Model != null && Model.ProductViewModelOrder.Count() > 0)
                                        {
                                            foreach (var item in Model.ProductViewModelOrder.OrderByDescending(x => x.OrderCount))
                                            {
                                                <tr>
                                                    <td>@(j++)</td>
                                                    <td>@item.ProductName</td>
                                                    <td>@item.CurrentPrice.</td>
                                                    <td>@item.OrderCount</td>
                                                </tr>
                                            }
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                    <!-- /.card -->
                </div>
            </div>
        </div>
    </section>
</div>

<!-- OPTIONAL SCRIPTS -->
<script src="~/lib/plugins/chart.js/Chart.min.js"></script>
<script src="~/lib/dist/js/demo.js"></script>
@*<script src="~/lib/dist/js/pages/dashboard3.js"></script>*@

@section scripts{
    <script type="text/javascript">
        document.addEventListener("DOMContentLoaded", function () {
            new Chart(document.getElementById("lineChart"), {
                type: "line",
                data: {
                    labels: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
                    datasets: [{
                        label: "Sales ($)",
                        fill: true,
                        backgroundColor: "transparent",
                        borderColor: "#adb5bd",
                        data: [5, 10, 20, 20, 25, 30, 25, 20, 15, 20, 15, 20]
                    }]
                },
                options: {
                    maintainAspectRatio: false,
                    legend: {
                        display: false
                    },
                    tooltips: {
                        intersect: false
                    },
                    hover: {
                        intersect: true
                    },
                    plugins: {
                        filler: {
                            propagate: false
                        }
                    },
                    scales: {
                        xAxes: [{
                            reverse: true,
                            gridLines: {
                                color: "rgba(0,0,0,0.05)"
                            }
                        }],
                        yAxes: [{
                            ticks: {
                                stepSize: 5
                            },
                            display: true,
                            borderDash: [5, 5],
                            gridLines: {
                                color: "rgba(0,0,0,0)",
                                fontColor: "#fff"
                            }
                        }]
                    }
                }
            });
        });

        $(function () {
            var areaChartData = {
                labels: JSON.parse('@Html.Raw(Json.Serialize(Model.PaymentWiseStatus.Select(e => e.Month)))'),
                datasets: [
                    {
                        label: 'Verified',
                        backgroundColor: 'rgba(60,141,188,0.9)',
                        borderColor: 'rgba(60,141,188,0.8)',
                        pointRadius: false,
                        pointColor: '#3b8bba',
                        pointStrokeColor: 'rgba(60,141,188,1)',
                        pointHighlightFill: '#fff',
                        pointHighlightStroke: 'rgba(60,141,188,1)',
                        data: JSON.parse('@Html.Raw(Json.Serialize(Model.PaymentWiseStatus.Select(e => e.VerifiedPayment)))'),
                    },
                    {
                        label: 'Unverified',
                        backgroundColor: 'rgba(210, 214, 222, 1)',
                        borderColor: 'rgba(210, 214, 222, 1)',
                        pointRadius: false,
                        pointColor: 'rgba(210, 214, 222, 1)',
                        pointStrokeColor: '#c1c7d1',
                        pointHighlightFill: '#fff',
                        pointHighlightStroke: 'rgba(220,220,220,1)',
                        data: JSON.parse('@Html.Raw(Json.Serialize(Model.PaymentWiseStatus.Select(e => e.UnverifiedPayment)))'),
                    },
                ]
            }

            var barChartCanvas = $('#barChart').get(0).getContext('2d')
            var barChartData = jQuery.extend(true, {}, areaChartData)
            var temp0 = areaChartData.datasets[0]
            var temp1 = areaChartData.datasets[1]
            barChartData.datasets[0] = temp1
            barChartData.datasets[1] = temp0

            var barChartOptions = {
                responsive: true,
                maintainAspectRatio: false,
                datasetFill: false
            }

            var barChart = new Chart(barChartCanvas, {
                type: 'bar',
                data: barChartData,
                options: barChartOptions
            })

        });

        $(function () {
            'use strict'

            var ticksStyle = {
                fontColor: '#495057',
                fontStyle: 'bold'
            }

            var mode = 'index'
            var intersect = true


            var $visitorsChart = $('#visitors-chart')
            var visitorsChart = new Chart($visitorsChart, {
                data: {
                    labels: JSON.parse('@Html.Raw(Json.Serialize(Model.OrderWiseComparision.Select(e => e.Month)))'),
                    datasets: [
                        {
                            type: 'line',
                            data: JSON.parse('@Html.Raw(Json.Serialize(Model.OrderWiseComparision.Select(e => e.CurrentYear)))'),
                            backgroundColor: 'transparent',
                            borderColor: '#007bff',
                            pointBorderColor: '#007bff',
                            pointBackgroundColor: '#007bff',
                            fill: false
                        },
                        {
                            type: 'line',
                            data: JSON.parse('@Html.Raw(Json.Serialize(Model.OrderWiseComparision.Select(e => e.LastYear)))'),
                            backgroundColor: 'tansparent',
                            borderColor: '#ced4da',
                            pointBorderColor: '#ced4da',
                            pointBackgroundColor: '#ced4da',
                            fill: false
                        }
                    ]
                },
                options: {
                    maintainAspectRatio: false,
                    tooltips: {
                        mode: mode,
                        intersect: intersect
                    },
                    hover: {
                        mode: mode,
                        intersect: intersect
                    },
                    legend: {
                        display: false
                    },
                    scales: {
                        yAxes: [{
                            // display: false,
                            gridLines: {
                                display: true,
                                lineWidth: '4px',
                                color: 'rgba(0, 0, 0, .2)',
                                zeroLineColor: 'transparent'
                            },
                            ticks: $.extend({
                                beginAtZero: true,
                                suggestedMax: 10
                            }, ticksStyle)
                        }],
                        xAxes: [{
                            display: true,
                            gridLines: {
                                display: false
                            },
                            ticks: ticksStyle
                        }]
                    }
                }
            })
        })


          $(function () {
            'use strict'

            var ticksStyle = {
                fontColor: '#495057',
                fontStyle: 'bold'
            }

            var mode = 'index'
            var intersect = true


              var $paymentsChart = $('#payments-chart')
              var $paymentsChart = new Chart($paymentsChart, {
          data: {
                    labels: JSON.parse('@Html.Raw(Json.Serialize(Model.PaymentWiseComparision.Select(e => e.Month)))'),
                    datasets: [
                        {
                            type: 'line',
                            data: JSON.parse('@Html.Raw(Json.Serialize(Model.PaymentWiseComparision.Select(e => e.CurrentYear)))'),
                            backgroundColor: 'transparent',
                            borderColor: '#007bff',
                            pointBorderColor: '#007bff',
                            pointBackgroundColor: '#007bff',
                            fill: false
                        },
                        {
                            type: 'line',
                            data: JSON.parse('@Html.Raw(Json.Serialize(Model.PaymentWiseComparision.Select(e => e.LastYear)))'),
                            backgroundColor: 'tansparent',
                            borderColor: '#ced4da',
                            pointBorderColor: '#ced4da',
                            pointBackgroundColor: '#ced4da',
                            fill: false
                        }
                    ]
                },
                options: {
                    maintainAspectRatio: false,
                    tooltips: {
                        mode: mode,
                        intersect: intersect
                    },
                    hover: {
                        mode: mode,
                        intersect: intersect
                    },
                    legend: {
                        display: false
                    },
                    scales: {
                        yAxes: [{
                            gridLines: {
                                display: true,
                                lineWidth: '4px',
                                color: 'rgba(0, 0, 0, .2)',
                                zeroLineColor: 'transparent'
                            },
                            ticks: $.extend({
                                beginAtZero: true,
                                //suggestedMax: 200
                            }, ticksStyle)
                        }],
                        xAxes: [{
                            display: true,
                            gridLines: {
                                display: false
                            },
                            ticks: ticksStyle
                        }]
                    }
                }
            })
        })


    </script>
}

