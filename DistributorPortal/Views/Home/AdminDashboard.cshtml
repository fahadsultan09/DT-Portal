@model AdminDashboardViewModel
@using Utility 
@{
    ViewData["Title"] = "Home Page";
    int MaxOrder = Model.PendingApproval + Model.PaymentVerified + Model.InProcess + Model.PartiallyProcessed + Model.CompletelyProcessed + Model.Reject + Model.ReturnOrder;
}
<style type="text/css">
    body {
        min-height: 400px;
        margin-bottom: 50px;
        clear: both;
    }
</style>

<div class="content-wrapper">
    <div class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1 class="m-0 text-dark">Dashboard</h1>
                </div>
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item"><a href="">Home</a></li>
                        <li class="breadcrumb-item active">Dashboard</li>
                    </ol>
                </div>
            </div>
        </div>
    </div>
    <section class="content">
        <div class="container-fluid">
            <div class="row">
                <div class="col-lg-3 col-6">
                    <!-- small box -->
                    <div class="small-box bg-info">
                        <div class="inner">
                            <h3>@Model.PendingOrder</h3>
                            <p>Pending Orders</p>
                        </div>
                        <div class="icon">
                            <i class="fas fa-shopping-cart"></i>
                        </div>
                        @*<a href="#" class="small-box-footer">More info <i class="fas fa-arrow-circle-right"></i></a>*@
                    </div>
                </div>
                <!-- ./col -->
                <div class="col-lg-3 col-6">
                    <!-- small box -->
                    <div class="small-box bg-success">
                        <div class="inner">
                            <h3>@ExtensionUtility.FormatNumberAmount(Model.UnverifiedPayment)</h3>
                            <p>Unverified Payment</p>
                        </div>
                        <div class="icon">
                            <i class="fas fa-money-bill-alt"></i>
                        </div>
                        @*<a href="#" class="small-box-footer">More info <i class="fas fa-arrow-circle-right"></i></a>*@
                    </div>
                </div>
                <!-- ./col -->
                <div class="col-lg-3 col-6">
                    <!-- small box -->
                    <div class="small-box bg-danger">
                        <div class="inner">
                            <h3>@Model.ReturnOrder</h3>
                            <p>Return Orders</p>
                        </div>
                        <div class="icon">
                            <i class="fas fa-undo-alt"></i>
                        </div>
                        @*<a href="#" class="small-box-footer">More info <i class="fas fa-arrow-circle-right"></i></a>*@
                    </div>
                </div>
                <!-- ./col -->
                <div class="col-lg-3 col-6">
                    <!-- small box -->
                    <div class="small-box bg-warning">
                        <div class="inner">
                            <h3>@Model.Complaint</h3>
                            <p>Complaints</p>
                        </div>
                        <div class="icon">
                            <i class="fas fa-clipboard-list"></i>
                        </div>
                        @*<a href="#" class="small-box-footer">More info <i class="fas fa-arrow-circle-right"></i></a>*@
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-12">
                    <div class="col-lg-12">
                        <div class="card  card-success">
                            <div class="card-header border-0">
                                <div class="d-flex justify-content-between">
                                    <h3 class="card-title">Order Payment Status - Last 12 Months</h3>
                                </div>
                            </div>
                            <div class="card-body">
                                <div class="position-relative mb-4">
                                    <canvas id="payments-chart" height="200"></canvas>
                                </div>
                                <div class="d-flex flex-row justify-content-end">
                                    <span class="mr-2"><i class="fas fa-square text-primary"></i> This year</span>
                                    <span><i class="fas fa-square text-gray"></i> Last year</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-12">
                    <!-- /.card-body -->
                    <!--</div>-->
                    <div class="col-lg-12">
                        <div class="card  card-primary">
                            <div class="card-header border-0">
                                <div class="d-flex justify-content-between">
                                    <h3 class="card-title">Order Status - Last 12 Months</h3>
                                    @*<a href="javascript:void(0);">View Report</a>*@
                                </div>
                            </div>
                            <div class="card-body">
                                <div class="position-relative mb-4">
                                    <canvas id="orders-chart" height="200"></canvas>
                                </div>
                                <div class="d-flex flex-row justify-content-end">
                                    <span class="mr-2"><i class="fas fa-square text-primary"></i> This year</span>
                                    <span><i class="fas fa-square text-gray"></i> Last year</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-3 col-6">
                    <div class="card">
                        <div class="card-header">
                            <h3 class="card-title"><i class="far fa-chart-bar"></i>Payments - @DateTime.Now.Year</h3>
                            <button class="btn btn-outline-primary float-right">View All</button>
                        </div>
                        <div class="card-body">
                            <!-- /.row -->
                            <div class="row">
                                <div class="col-12 text-center">
                                    <input type="text" class="knob" value="@Model.VerifiedPayment" data-min="0" data-max="@(Model.VerifiedPayment + Model.UnverifiedPayment)" data-width="90" data-height="90" data-fgColor="#28a745" readonly="readonly" disabled="disabled">
                                    <div class="knob-label">Verified Payment</div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-12 text-center">
                                    <input type="text" class="knob" value="@Model.UnverifiedPayment" data-min="0" data-max="@(Model.VerifiedPayment + Model.UnverifiedPayment)" data-width="90" data-height="90" data-fgColor="#dc3545" readonly="readonly" disabled="disabled">
                                    <div class="knob-label">Unverified Payment</div>
                                </div>
                            </div>
                        </div>
                        <!-- /.card-body -->
                    </div>
                    <!-- /.card -->
                </div>
                <div class="col-lg-9 col-6">
                    <!-- jQuery Knob -->
                    <div class="card">
                        <div class="card-header">
                            <h3 class="card-title"><i class="far fa-chart-bar"></i>Orders - @DateTime.Now.Year</h3>
                            <button class="btn btn-outline-primary float-right">View All</button>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                <!-- ./col -->
                                <div class="col-3 text-center">
                                    <input type="text" readonly="readonly" disabled="disabled" class="knob" value="@Model.PendingApproval" data-min="0" data-max="@MaxOrder" data-width="90" data-height="90" data-fgColor="#f56954">
                                    <div class="knob-label">Pending Approval</div>
                                </div>
                                <div class="col-3 text-center">
                                    <input type="text" readonly="readonly" disabled="disabled" class="knob" value="@Model.PaymentVerified" data-min="0" data-max="@MaxOrder" data-width="90" data-height="90" data-fgColor="#00c0ef">
                                    <div class="knob-label">Payment Verified</div>
                                </div>
                                <div class="col-3 text-center">
                                    <input type="text" readonly="readonly" disabled="disabled" class="knob" value="@Model.InProcess" data-min="0" data-max="@MaxOrder" data-width="90" data-height="90" data-fgColor="#39CCCC">
                                    <div class="knob-label">In Process</div>
                                </div>
                                <div class="col-3 text-center">
                                    <input type="text" readonly="readonly" disabled="disabled" class="knob" value="@Model.PartiallyProcessed" data-min="0" data-max="@MaxOrder" data-width="90" data-height="90" data-fgColor="#932ab6">
                                    <div class="knob-label">Partially Processed</div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-4 text-center">
                                    <input type="text" readonly="readonly" disabled="disabled" class="knob" value="@Model.CompletelyProcessed" data-min="0" data-max="@MaxOrder" data-width="90" data-height="90" data-fgColor="#00a65a">
                                    <div class="knob-label">Completely Processed</div>
                                </div>
                                <div class="col-4 text-center">
                                    <input type="text" readonly="readonly" disabled="disabled" class="knob" value="@Model.OnHold" data-min="0" data-max="@MaxOrder" data-width="90" data-height="90" data-fgColor="#932ab6">
                                    <div class="knob-label">On Hold</div>
                                </div>
                                <div class="col-4 text-center">
                                    <input type="text" readonly="readonly" disabled="disabled" class="knob" value="@Model.Reject" data-min="0" data-max="@MaxOrder" data-width="90" data-height="90" data-fgColor="#932ab6">
                                    <div class="knob-label">Reject</div>
                                </div>
                            </div>
                            <!-- /.row -->
                        </div>
                        <!-- /.card-body -->
                    </div>
                    <!-- /.card -->
                </div>
                <!-- /.col -->
            </div>

            <div class="row">
                <div class="col-8">
                    <div class="card card-success">
                        <div class="card-header">
                            <h3 class="card-title">Payment Status - Last 12 Months</h3>
                        </div>
                        <div class="card-body">
                            <div class="chart">
                                <canvas id="barChart" style="min-height: 250px; height: 250px; max-height: 250px; max-width: 100%;"></canvas>
                            </div>
                        </div>
                        <!-- /.card-body -->
                    </div>
                </div>
                <!-- /.card -->
                <div class="col-4">
                    <!-- PIE CHART -->
                    <div class="card card-blue">
                        <div class="card-header">
                            <h3 class="card-title">Region Wise Orders</h3>
                        </div>
                        <div class="card-body">
                            <canvas id="pieChart" style="min-height: 250px; height: 250px; max-height: 250px; max-width: 100%;"></canvas>
                        </div>
                        <!-- /.card-body -->
                    </div>
                    <!-- /.card -->
                </div>
            </div>
            <div class="row">
                <div class="col-lg-6">
                    <!-- /.card -->
                    <div class="card">
                        <div class="card-header border-0">
                            <h2 class="card-title"><strong>Distributor Orders</strong></h2><br />
                            <small>Top five Distributors by Orders</small>
                        </div>
                        <div class="card-body table-responsive p-0">
                            <table class="table table-striped table-valign-middle">
                                <thead>
                                    <tr>
                                        <th>S.No.</th>
                                        <th>Distributor Name</th>
                                        <th>Total Orders</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @{
                                        int i = 1;
                                        if (Model.DistributorViewModelOrder != null && Model.DistributorViewModelOrder.Count() > 0)
                                        {
                                            foreach (var item in Model.DistributorViewModelOrder.OrderByDescending(x => x.OrderCount))
                                            {
                                                <tr>
                                                    <td>@(i++)</td>
                                                    <td>@item.DistributorName</td>
                                                    <td>@item.OrderCount</td>
                                                </tr>
                                            }
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                    <!-- /.card -->
                </div>
                <div class="col-lg-6">
                    <!-- /.card -->
                    <div class="card">
                        <div class="card-header border-0">
                            <h2 class="card-title"><strong>Distributor Payments</strong></h2><br />
                            <small>Top five Distributors By Payments</small>
                        </div>
                        <div class="card-body table-responsive p-0">
                            <table class="table table-striped table-valign-middle">
                                <thead>
                                    <tr>
                                        <th>S.No.</th>
                                        <th>Distributor Name</th>
                                        <th>Payments</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @{
                                        int j = 1;
                                        if (Model.DistributorViewModelPayment != null && Model.DistributorViewModelPayment.Count() > 0)
                                        {
                                            foreach (var item in Model.DistributorViewModelPayment.OrderByDescending(x => x.Payment))
                                            {
                                                <tr>
                                                    <td>@(j++)</td>
                                                    <td>@item.DistributorName</td>
                                                    <td>@item.Payment</td>
                                                </tr>
                                            }
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                    <!-- /.card -->
                </div>
            </div>
            <div class="row">
                <div class="col-lg-6">
                    <!-- /.card -->
                    <div class="card">
                        <div class="card-header border-0">
                            <h3 class="card-title"><strong>Order Products</strong></h3><br />
                            <small>Top five selling products by order</small>
                        </div>
                        <div class="card-body table-responsive p-0">
                            <table class="table table-striped table-valign-middle">
                                <thead>
                                    <tr>
                                        <th>S.No.</th>
                                        <th>Product</th>
                                        <th>Current Price</th>
                                        <th>Orders</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @{
                                        int k = 1;
                                        if (Model.ProductViewModelOrder != null && Model.ProductViewModelOrder.Count() > 0)
                                        {
                                            foreach (var item in Model.ProductViewModelOrder.OrderByDescending(x => x.OrderCount))
                                            {
                                                <tr>
                                                    <td>@(k++)</td>
                                                    <td>@item.ProductName</td>
                                                    <td>@item.CurrentPrice</td>
                                                    <td>@item.OrderCount</td>
                                                </tr>
                                            }
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                    <!-- /.card -->
                </div>
                <div class="col-lg-6">
                    <!-- /.card -->
                    <div class="card">
                        <div class="card-header border-0">
                            <h3 class="card-title"><strong>Selling Products</strong></h3><br />
                            <small>Top five selling products by quantity</small>
                        </div>
                        <div class="card-body table-responsive p-0">
                            <table class="table table-striped table-valign-middle">
                                <thead>
                                    <tr>
                                        <th>S.No.</th>
                                        <th>Product</th>
                                        <th>Current Price</th>
                                        <th>Quantity</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @{
                                        int l = 1;
                                        if (Model.ProductViewModelQuantity != null && Model.ProductViewModelQuantity.Count() > 0)
                                        {
                                            foreach (var item in Model.ProductViewModelQuantity.OrderByDescending(x => x.Quantity))
                                            {
                                                <tr>
                                                    <td>@(l++)</td>
                                                    <td>@item.ProductName</td>
                                                    <td>@item.CurrentPrice</td>
                                                    <td>@item.Quantity</td>
                                                </tr>
                                            }
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                    <!-- /.card -->
                </div>
            </div>
        </div>
    </section>
</div>

@section scripts{
    <script type="text/javascript">

        $(function () {
            var donutData = {
                labels: JSON.parse('@Html.Raw(Json.Serialize(Model.RegionWiseOrder.Select(e => e.Region)))'),
                datasets: [
                    {
                        data: JSON.parse('@Html.Raw(Json.Serialize(Model.RegionWiseOrder.Select(e => e.OrderCount)))'),
                        backgroundColor: ['#f56954', '#00a65a', '#f39c12', '#00c0ef', '#3c8dbc', '#d2d6de',
                            '#84fc03', '#31fc03', '#03fc84', '#03e7fc', '#0303fc', '#fc03f4'],
                    }
                ]
            }

            //-------------
            //- PIE CHART -
            //-------------
            // Get context with jQuery - using jQuery's .get() method.
            var pieChartCanvas = $('#pieChart').get(0).getContext('2d')
            var pieData = donutData;
            var pieOptions = {
                maintainAspectRatio: false,
                responsive: true,
            }
            //Create pie or douhnut chart
            // You can switch between pie and douhnut using the method below.
            var pieChart = new Chart(pieChartCanvas, {
                type: 'pie',
                data: pieData,
                options: pieOptions
            })

            //-------------
            //- BAR CHART -
            //-------------
            // Get context with jQuery - using jQuery's .get() method.

            var areaChartData = {
                labels: JSON.parse('@Html.Raw(Json.Serialize(Model.PaymentWiseStatus.Select(e => e.Month)))'),
                datasets: [
                    {
                        label: 'Verified',
                        backgroundColor: 'rgba(60,141,188,0.9)',
                        borderColor: 'rgba(60,141,188,0.8)',
                        pointRadius: false,
                        pointColor: '#3b8bba',
                        pointStrokeColor: 'rgba(60,141,188,1)',
                        pointHighlightFill: '#fff',
                        pointHighlightStroke: 'rgba(60,141,188,1)',
                        data: JSON.parse('@Html.Raw(Json.Serialize(Model.PaymentWiseStatus.Select(e => e.VerifiedPayment)))'),
                    },
                    {
                        label: 'Unverified',
                        backgroundColor: 'rgba(210, 214, 222, 1)',
                        borderColor: 'rgba(210, 214, 222, 1)',
                        pointRadius: false,
                        pointColor: 'rgba(210, 214, 222, 1)',
                        pointStrokeColor: '#c1c7d1',
                        pointHighlightFill: '#fff',
                        pointHighlightStroke: 'rgba(220,220,220,1)',
                        data: JSON.parse('@Html.Raw(Json.Serialize(Model.PaymentWiseStatus.Select(e => e.UnverifiedPayment)))'),
                    },
                ]
            }

            var barChartCanvas = $('#barChart').get(0).getContext('2d')
            var barChartData = jQuery.extend(true, {}, areaChartData)
            var temp0 = areaChartData.datasets[0]
            var temp1 = areaChartData.datasets[1]
            barChartData.datasets[0] = temp1
            barChartData.datasets[1] = temp0

            var barChartOptions = {
                responsive: true,
                maintainAspectRatio: false,
                datasetFill: false
            }

            var barChart = new Chart(barChartCanvas, {
                type: 'bar',
                data: barChartData,
                options: barChartOptions
            })
        });

        $(function () {
            'use strict'

            var ticksStyle = {
                fontColor: '#495057',
                fontStyle: 'bold'
            }

            var mode = 'index'
            var intersect = true


            var $visitorsChart = $('#orders-chart')
            var visitorsChart = new Chart($visitorsChart, {
          data: {
                    labels: JSON.parse('@Html.Raw(Json.Serialize(Model.OrderWiseComparision.Select(e => e.Month)))'),
                    datasets: [
                        {
                            type: 'line',
                            data: JSON.parse('@Html.Raw(Json.Serialize(Model.OrderWiseComparision.Select(e => e.CurrentYear)))'),
                            backgroundColor: 'transparent',
                            borderColor: '#007bff',
                            pointBorderColor: '#007bff',
                            pointBackgroundColor: '#007bff',
                            fill: false
                        },
                        {
                            type: 'line',
                            data: JSON.parse('@Html.Raw(Json.Serialize(Model.OrderWiseComparision.Select(e => e.LastYear)))'),
                            backgroundColor: 'tansparent',
                            borderColor: '#ced4da',
                            pointBorderColor: '#ced4da',
                            pointBackgroundColor: '#ced4da',
                            fill: false
                        }
                    ]
                },
                options: {
                    maintainAspectRatio: false,
                    tooltips: {
                        mode: mode,
                        intersect: intersect
                    },
                    hover: {
                        mode: mode,
                        intersect: intersect
                    },
                    legend: {
                        display: false
                    },
                    scales: {
                        yAxes: [{
                            gridLines: {
                                display: true,
                                lineWidth: '4px',
                                color: 'rgba(0, 0, 0, .2)',
                                zeroLineColor: 'transparent'
                            },
                            ticks: $.extend({
                                beginAtZero: true,
                                //suggestedMax: 200
                            }, ticksStyle)
                        }],
                        xAxes: [{
                            display: true,
                            gridLines: {
                                display: false
                            },
                            ticks: ticksStyle
                        }]
                    }
                }
            })
        })

          $(function () {
            'use strict'

            var ticksStyle = {
                fontColor: '#495057',
                fontStyle: 'bold'
            }

            var mode = 'index'
            var intersect = true


              var $paymentsChart = $('#payments-chart')
              var $paymentsChart = new Chart($paymentsChart, {
          data: {
                    labels: JSON.parse('@Html.Raw(Json.Serialize(Model.PaymentWiseComparision.Select(e => e.Month)))'),
                    datasets: [
                        {
                            type: 'line',
                            data: JSON.parse('@Html.Raw(Json.Serialize(Model.PaymentWiseComparision.Select(e => e.CurrentYear)))'),
                            backgroundColor: 'transparent',
                            borderColor: '#007bff',
                            pointBorderColor: '#007bff',
                            pointBackgroundColor: '#007bff',
                            fill: false
                        },
                        {
                            type: 'line',
                            data: JSON.parse('@Html.Raw(Json.Serialize(Model.PaymentWiseComparision.Select(e => e.LastYear)))'),
                            backgroundColor: 'tansparent',
                            borderColor: '#ced4da',
                            pointBorderColor: '#ced4da',
                            pointBackgroundColor: '#ced4da',
                            fill: false
                        }
                    ]
                },
                options: {
                    maintainAspectRatio: false,
                    tooltips: {
                        mode: mode,
                        intersect: intersect
                    },
                    hover: {
                        mode: mode,
                        intersect: intersect
                    },
                    legend: {
                        display: false
                    },
                    scales: {
                        yAxes: [{
                            gridLines: {
                                display: true,
                                lineWidth: '4px',
                                color: 'rgba(0, 0, 0, .2)',
                                zeroLineColor: 'transparent'
                            },
                            ticks: $.extend({
                                beginAtZero: true,
                                //suggestedMax: 200
                            }, ticksStyle)
                        }],
                        xAxes: [{
                            display: true,
                            gridLines: {
                                display: false
                            },
                            ticks: ticksStyle
                        }]
                    }
                }
            })
        })

    </script>
}